/*buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        mavenCentral()
    }
    dependencies {
    	classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    	// compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
  		// at runtime, use the full JEI jar
    	// runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.0'
group = 'net.addcycle.chaosmod' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ChaosMod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    // mappings channel: 'snapshot', version: '20171003-1.12'
	mappings 'net.minecraftforge:forge:1.12.2-14.23.5.2859:mapped_snapshot_20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
	maven {
        // location of the maven that hosts JEI files
        name "Progwml6 maven"
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name "ModMaven"
        url "https://modmaven.k-4u.nl"
    }
    maven {
        //location of the maven for vazkii's mods
        name "blamejared"
        url "http://maven.blamejared.com/"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mc_version}-14.23.5.2859"
  	// at runtime, use the full JEI jar
    compileOnly fg.deobf("mezz.jei:jei_${mc_version}:${jei_version}:api")
  	runtimeOnly fg.deobf("mezz.jei:jei_${mc_version}:${jei_version}")

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "chaosmod",
            "Specification-Vendor": "chaosmod",
            "Specification-Version": "1.0.0", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"chaosmod",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}*/

// ######################### Forge Gradle 2snapshot temp fix ############################

buildscript {
    repositories {
        // jcenter()
        maven {
            name = "Forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0.9"
group = "net.chaos.chaosmod"
archivesBaseName = "ChaosMod"

sourceCompatibility = targetCompatibility = "1.8" // Java 8 for MC 1.12.2

minecraft {
 	version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "snapshot_20171003"
    // OR: mappings channel: 'snapshot', version: '20171003-1.12'
    /*// Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }*/
}

repositories {
    mavenCentral()
    maven { url "https://dvs1.progwml6.com/files/maven" } // JEI
    maven { url "https://modmaven.dev" }
}

dependencies {
    // JEI runtime + API for development
    deobfCompile "mezz.jei:jei_1.12.2:4.15.0.268"
    compileOnly "mezz.jei:jei_1.12.2:4.15.0.268:api"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': "1.12.2"
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes([
            "FMLCorePluginContainsMod": "true",
            "FMLAT": "accesstransformer.cfg"
        ])
    }
}
